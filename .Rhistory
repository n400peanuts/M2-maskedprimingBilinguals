masterFile$AoA7[masterFile$Subject==21] <- c(4)
masterFile$AoA8[masterFile$Subject==21] <- c(2)
masterFile$AoA9[masterFile$Subject==21] <- c(4)
#                 ss22
masterFile$AoA1[masterFile$Subject==22] <- c(3)
masterFile$AoA2[masterFile$Subject==22] <- c(2)
masterFile$AoA3[masterFile$Subject==22] <- c("school")
masterFile$AoA4[masterFile$Subject==22] <- c(1)
masterFile$AoA5[masterFile$Subject==22] <- c(2)
masterFile$AoA6[masterFile$Subject==22] <- c(2)
masterFile$AoA7[masterFile$Subject==22] <- c(4)
masterFile$AoA8[masterFile$Subject==22] <- c(2)
masterFile$AoA9[masterFile$Subject==22] <- c(4)
#                 ss23
masterFile$AoA1[masterFile$Subject==23] <- c(7)
masterFile$AoA2[masterFile$Subject==23] <- c(2)
masterFile$AoA3[masterFile$Subject==23] <- c("school")
masterFile$AoA4[masterFile$Subject==23] <- c(1)
masterFile$AoA5[masterFile$Subject==23] <- c(1)
masterFile$AoA6[masterFile$Subject==23] <- c(2)
masterFile$AoA7[masterFile$Subject==23] <- c(5)
masterFile$AoA8[masterFile$Subject==23] <- c(1)
masterFile$AoA9[masterFile$Subject==23] <- c(3)
#                 ss24
masterFile$AoA1[masterFile$Subject==24] <- c(7)
masterFile$AoA2[masterFile$Subject==24] <- c(2)
masterFile$AoA3[masterFile$Subject==24] <- c("school")
masterFile$AoA4[masterFile$Subject==24] <- c(1)
masterFile$AoA5[masterFile$Subject==24] <- c(2)
masterFile$AoA6[masterFile$Subject==24] <- c(1)
masterFile$AoA7[masterFile$Subject==24] <- c(3)
masterFile$AoA8[masterFile$Subject==24] <- c(2)
masterFile$AoA9[masterFile$Subject==24] <- c(1)
#                 ss25
masterFile$AoA1[masterFile$Subject==25] <- c(11)
masterFile$AoA2[masterFile$Subject==25] <- c(4)
masterFile$AoA3[masterFile$Subject==25] <- c("school")
masterFile$AoA4[masterFile$Subject==25] <- c(1)
masterFile$AoA5[masterFile$Subject==25] <- c(2)
masterFile$AoA6[masterFile$Subject==25] <- c(1)
masterFile$AoA7[masterFile$Subject==25] <- c(4)
masterFile$AoA8[masterFile$Subject==25] <- c(2)
masterFile$AoA9[masterFile$Subject==25] <- c(3)
#                 ss26
masterFile$AoA1[masterFile$Subject==26] <- c(6)
masterFile$AoA2[masterFile$Subject==26] <- c(2)
masterFile$AoA3[masterFile$Subject==26] <- c("school")
masterFile$AoA4[masterFile$Subject==26] <- c(1)
masterFile$AoA5[masterFile$Subject==26] <- c(1)
masterFile$AoA6[masterFile$Subject==26] <- c(2)
masterFile$AoA7[masterFile$Subject==26] <- c(3)
masterFile$AoA8[masterFile$Subject==26] <- c(1)
masterFile$AoA9[masterFile$Subject==26] <- c(4)
#                 ss27
masterFile$AoA1[masterFile$Subject==27] <- c(11)
masterFile$AoA2[masterFile$Subject==27] <- c(3)
masterFile$AoA3[masterFile$Subject==27] <- c("school")
masterFile$AoA4[masterFile$Subject==27] <- c(1)
masterFile$AoA5[masterFile$Subject==27] <- c(2)
masterFile$AoA6[masterFile$Subject==27] <- c(1)
masterFile$AoA7[masterFile$Subject==27] <- c(4)
masterFile$AoA8[masterFile$Subject==27] <- c(2)
masterFile$AoA9[masterFile$Subject==27] <- c(1)
#                 ss28
masterFile$AoA1[masterFile$Subject==28] <- c(8)
masterFile$AoA2[masterFile$Subject==28] <- c(4)
masterFile$AoA3[masterFile$Subject==28] <- c("school")
masterFile$AoA4[masterFile$Subject==28] <- c(1)
masterFile$AoA5[masterFile$Subject==28] <- c(2)
masterFile$AoA6[masterFile$Subject==28] <- c(1)
masterFile$AoA7[masterFile$Subject==28] <- c(3)
masterFile$AoA8[masterFile$Subject==28] <- c(3)
masterFile$AoA9[masterFile$Subject==28] <- c(0)
#                 ss29
masterFile$AoA1[masterFile$Subject==29] <- c(6)
masterFile$AoA2[masterFile$Subject==29] <- c(3)
masterFile$AoA3[masterFile$Subject==29] <- c("school")
masterFile$AoA4[masterFile$Subject==29] <- c(1)
masterFile$AoA5[masterFile$Subject==29] <- c(1)
masterFile$AoA6[masterFile$Subject==29] <- c(2)
masterFile$AoA7[masterFile$Subject==29] <- c(3)
masterFile$AoA8[masterFile$Subject==29] <- c(1)
masterFile$AoA9[masterFile$Subject==29] <- c(4)
#                 ss30
masterFile$AoA1[masterFile$Subject==30] <- c(7)
masterFile$AoA2[masterFile$Subject==30] <- c(3)
masterFile$AoA3[masterFile$Subject==30] <- c("school")
masterFile$AoA4[masterFile$Subject==30] <- c(1)
masterFile$AoA5[masterFile$Subject==30] <- c(2)
masterFile$AoA6[masterFile$Subject==30] <- c(1)
masterFile$AoA7[masterFile$Subject==30] <- c(3)
masterFile$AoA8[masterFile$Subject==30] <- c(3)
masterFile$AoA9[masterFile$Subject==30] <- c(0)
#                 ss31
masterFile$AoA1[masterFile$Subject==31] <- c(6)
masterFile$AoA2[masterFile$Subject==31] <- c(4)
masterFile$AoA3[masterFile$Subject==31] <- c("school")
masterFile$AoA4[masterFile$Subject==31] <- c(1)
masterFile$AoA5[masterFile$Subject==31] <- c(2)
masterFile$AoA6[masterFile$Subject==31] <- c(1)
masterFile$AoA7[masterFile$Subject==31] <- c(3)
masterFile$AoA8[masterFile$Subject==31] <- c(3)
masterFile$AoA9[masterFile$Subject==31] <- c(0)
#                 ss32
masterFile$AoA1[masterFile$Subject==32] <- c(8)
masterFile$AoA2[masterFile$Subject==32] <- c(3)
masterFile$AoA3[masterFile$Subject==32] <- c("school")
masterFile$AoA4[masterFile$Subject==32] <- c(1)
masterFile$AoA5[masterFile$Subject==32] <- c(2)
masterFile$AoA6[masterFile$Subject==32] <- c(1)
masterFile$AoA7[masterFile$Subject==32] <- c(3)
masterFile$AoA8[masterFile$Subject==32] <- c(3)
masterFile$AoA9[masterFile$Subject==32] <- c(0)
#                 ss33
masterFile$AoA1[masterFile$Subject==33] <- c(3)
masterFile$AoA2[masterFile$Subject==33] <- c(2)
masterFile$AoA3[masterFile$Subject==33] <- c("school")
masterFile$AoA4[masterFile$Subject==33] <- c(1)
masterFile$AoA5[masterFile$Subject==33] <- c(1)
masterFile$AoA6[masterFile$Subject==33] <- c(1)
masterFile$AoA7[masterFile$Subject==33] <- c(3)
masterFile$AoA8[masterFile$Subject==33] <- c(2)
masterFile$AoA9[masterFile$Subject==33] <- c(2)
#                 ss34
masterFile$AoA1[masterFile$Subject==34] <- c(8)
masterFile$AoA2[masterFile$Subject==34] <- c(4)
masterFile$AoA3[masterFile$Subject==34] <- c("school")
masterFile$AoA4[masterFile$Subject==34] <- c(1)
masterFile$AoA5[masterFile$Subject==34] <- c(2)
masterFile$AoA6[masterFile$Subject==34] <- c(1)
masterFile$AoA7[masterFile$Subject==34] <- c(4)
masterFile$AoA8[masterFile$Subject==34] <- c(2)
masterFile$AoA9[masterFile$Subject==34] <- c(3)
#                 ss35
masterFile$AoA1[masterFile$Subject==35] <- c(6)
masterFile$AoA2[masterFile$Subject==35] <- c(2)
masterFile$AoA3[masterFile$Subject==35] <- c("school")
masterFile$AoA4[masterFile$Subject==35] <- c(1)
masterFile$AoA5[masterFile$Subject==35] <- c(2)
masterFile$AoA6[masterFile$Subject==35] <- c(1)
masterFile$AoA7[masterFile$Subject==35] <- c(2)
masterFile$AoA8[masterFile$Subject==35] <- c(3)
masterFile$AoA9[masterFile$Subject==35] <- c(0)
#                 ss36
masterFile$AoA1[masterFile$Subject==36] <- c(6)
masterFile$AoA2[masterFile$Subject==36] <- c(3)
masterFile$AoA3[masterFile$Subject==36] <- c("school")
masterFile$AoA4[masterFile$Subject==36] <- c(1)
masterFile$AoA5[masterFile$Subject==36] <- c(1)
masterFile$AoA6[masterFile$Subject==36] <- c(2)
masterFile$AoA7[masterFile$Subject==36] <- c(1)
masterFile$AoA8[masterFile$Subject==36] <- c(1)
masterFile$AoA9[masterFile$Subject==36] <- c(4)
#                 ss37
masterFile$AoA1[masterFile$Subject==37] <- c(6)
masterFile$AoA2[masterFile$Subject==37] <- c(3)
masterFile$AoA3[masterFile$Subject==37] <- c("school")
masterFile$AoA4[masterFile$Subject==37] <- c(1)
masterFile$AoA5[masterFile$Subject==37] <- c(2)
masterFile$AoA6[masterFile$Subject==37] <- c(2)
masterFile$AoA7[masterFile$Subject==37] <- c(4)
masterFile$AoA8[masterFile$Subject==37] <- c(1)
masterFile$AoA9[masterFile$Subject==37] <- c(3)
#                 ss38
masterFile$AoA1[masterFile$Subject==38] <- c(6)
masterFile$AoA2[masterFile$Subject==38] <- c(3)
masterFile$AoA3[masterFile$Subject==38] <- c("school")
masterFile$AoA4[masterFile$Subject==38] <- c(1)
masterFile$AoA5[masterFile$Subject==38] <- c(2)
masterFile$AoA6[masterFile$Subject==38] <- c(2)
masterFile$AoA7[masterFile$Subject==38] <- c(5)
masterFile$AoA8[masterFile$Subject==38] <- c(1)
masterFile$AoA9[masterFile$Subject==38] <- c(3)
#                 ss39
masterFile$AoA1[masterFile$Subject==39] <- c(9)
masterFile$AoA2[masterFile$Subject==39] <- c(2)
masterFile$AoA3[masterFile$Subject==39] <- c("school")
masterFile$AoA4[masterFile$Subject==39] <- c(1)
masterFile$AoA5[masterFile$Subject==39] <- c(2)
masterFile$AoA6[masterFile$Subject==39] <- c(1)
masterFile$AoA7[masterFile$Subject==39] <- c(3)
masterFile$AoA8[masterFile$Subject==39] <- c(3)
masterFile$AoA9[masterFile$Subject==39] <- c(0)
#                 ss40
masterFile$AoA1[masterFile$Subject==40] <- c(6)
masterFile$AoA2[masterFile$Subject==40] <- c(1)
masterFile$AoA3[masterFile$Subject==40] <- c("school")
masterFile$AoA4[masterFile$Subject==40] <- c(1)
masterFile$AoA5[masterFile$Subject==40] <- c(2)
masterFile$AoA6[masterFile$Subject==40] <- c(1)
masterFile$AoA7[masterFile$Subject==40] <- c(2)
masterFile$AoA8[masterFile$Subject==40] <- c(3)
masterFile$AoA9[masterFile$Subject==40] <- c(0)
masterFile$AoA3 <- as.factor(masterFile$AoA3)
#---------------------------------------------------------------------------------------------------#
#                           Sumup of proficiency                                                    #
#---------------------------------------------------------------------------------------------------#
masterFile$overallProf <- apply(masterFile[28:34],1,FUN = sum);
#---------------------------------------------------------------------------------------------------#
#                                          END                                                      #
#---------------------------------------------------------------------------------------------------#
#---------------------------------------------------------------------------------------------------#
#                                          OSC                                                      #
#---------------------------------------------------------------------------------------------------#
read.table(paste(localGitDir, '/stimoli/OSC.txt', sep=''), header = T)-> db
colnames(db) <- c('Prime.x', 'OSC')
head(masterFile)
head(db)
subset(masterFile, masterFile$Language=='eng')-> masterfileEng_OSC
summary(masterfileEng_OSC)
merge(masterfileEng_OSC, db, by='Prime.x', all.x=T)-> masterfileEng_OSC
colnames(masterfileEng_OSC) <- c("Prime","Target","Subject","Age","Gender", "Handedness","Rotation",
"Data","OraStart" ,"TrialCount","TrialType","Relatedness","rt","Resp","Trial.ID","Target.ID","Lexicality","Morphtype","Primetype",
"Logfreq.Zipf.t","Lent","Lenp","Logfreq.Zipf.p","Nt","Np","Language","Accuracy","phoneticFluency","phoneticComprehension","morphComprehension",
"spelling","readingComprehension","vocabulary","oralComprehension","AoA1" ,
"AoA2","AoA3","AoA4","AoA5","AoA6", "AoA7","AoA8","AoA9","overallProf","OSC_Primes")
colnames(db) <- c('Target', 'OSC')
merge(masterfileEng_OSC, db, by='Target', all.x=T)-> masterfileEng_OSC
colnames(masterfileEng_OSC) <- c("Prime","Target","Subject","Age","Gender", "Handedness","Rotation",
"Data","OraStart" ,"TrialCount","TrialType","Relatedness","rt","Resp","Trial.ID","Target.ID","Lexicality","Morphtype","Primetype",
"Logfreq.Zipf.t","Lent","Lenp","Logfreq.Zipf.p","Nt","Np","Language","Accuracy","phoneticFluency","phoneticComprehension","morphComprehension",
"spelling","readingComprehension","vocabulary","oralComprehension","AoA1" ,
"AoA2","AoA3","AoA4","AoA5","AoA6", "AoA7","AoA8","AoA9", "overallProf","OSC_Primes","OSC_Target")
summary(masterfileEng_OSC)
rm(db, localGitDir)
#---------------------------------------------------------------------------------------------------#
#                                          END                                                      #
#---------------------------------------------------------------------------------------------------#
head(masterFile)
library(languageR)
library(lmerTest)
library(ggplot2)
library(rms)
library(doBy)
library(mgcv)
inv <- function(x) { -1000/x}
subset(masterFile, Language=="ita")-> masterfileIta
subset(masterfileIta, masterfileIta$rt>250 & masterfileIta$rt<1600 & masterfileIta$Subject!=16 & masterfileIta$Target!= "congruo" & masterfileIta$Target!= "guado" & masterfileIta$Target!= "guano" & masterfileIta$Target!= "uggia" & masterfileIta$Target!= "vello" & masterfileIta$Target!= "avo" & masterfileIta$Lexicality=="WORD") -> dataAccITA
subset(dataAccITA, dataAccITA$Accuracy==1)-> datartITA
rm(rt, acc, sbj.id, target, lexicality, masterfileIta, masterfileEng);
head(datartITA)
proficiencyL2onL1 <- lmer(-1000/rt ~ Relatedness * Morphtype * overallProf + rcs(TrialCount) + Logfreq.Zipf.t + Lent + (1|Subject) + (1|Target), data = datartITA);
anova(proficiencyL2onL1);
proficiencyL2onL1b <- lmer(-1000/rt ~ Relatedness * Morphtype * overallProf + rcs(TrialCount) + Logfreq.Zipf.t + Lent + (1|Subject) + (1|Target), data = subset(datartENG, abs(scale(resid(proficiencyL2onL1)))<2));
proficiencyL2onL1b <- lmer(-1000/rt ~ Relatedness * Morphtype * overallProf + rcs(TrialCount) + Logfreq.Zipf.t + Lent + (1|Subject) + (1|Target), data = subset(datartITA, abs(scale(resid(proficiencyL2onL1)))<2));
anova(proficiencyL2onL1b);
proficiencyL2onL1c <- lmer(-1000/rt ~ Relatedness * Morphtype * overallProf + rcs(TrialCount) + Logfreq.Zipf.t + Lent + (1|Subject) + (1|Target), data = subset(datartITA, abs(scale(resid(proficiencyL2onL1)))<2.5));
anova(proficiencyL2onL1c);
anova(proficiencyL2onL1b);
source(file ='GitHub/M2-maskedprimingBilinguals/data/analysis/mod.vis.gam.r')
gam1 <- gam(-1000/rt ~ s(OSC_Target, by = overallProf) + s(TrialCount) + s(Logfreq.Zipf.t) + s(Subject, bs = 're') + s(Target, bs = 're'), data = datartENG)
subset(masterFile, Language=="eng")-> masterfileEng
subset(masterfileEng, masterfileEng$rt>250 & masterfileEng$rt<1900 & masterfileEng$Subject!=16 & masterfileEng$Subject!=22 & masterfileEng$Subject!=26 & masterfileEng$Lexicality=="WORD") -> dataAccENG
subset(dataAccENG, dataAccENG$Accuracy==1)-> datartENG
rm(rt, acc, sbj.id, target, lexicality, masterfileIta, masterfileEng);
rm(dataAccITA, dataAccENG)
gam1 <- gam(-1000/rt ~ s(OSC_Target, by = overallProf) + s(TrialCount) + s(Logfreq.Zipf.t) + s(Subject, bs = 're') + s(Target, bs = 're'), data = datartENG)
subset(masterfileEng_OSC, masterfileEng_OSC$rt>250 & masterfileEng_OSC$rt<1900 & masterfileEng_OSC$Subject!=16 & masterfileEng_OSC$Subject!=22 & masterfileEng_OSC$Subject!=26 & masterfileEng_OSC$Lexicality=="WORD") -> dataAccENG
subset(dataAccENG, dataAccENG$Accuracy==1)-> datartENG
gam1 <- gam(-1000/rt ~ s(OSC_Target, by = overallProf) + s(TrialCount) + s(Logfreq.Zipf.t) + s(Subject, bs = 're') + s(Target, bs = 're'), data = datartENG)
vis.gam2(gam1, view=c("OSC_Target","overallProf"), type="response", plot.type="contour", color="gray", main="", too.far=.1, xlab='OSC', ylab='Proficiency scores');
vis.gam(gam1, view=c("OSC_Target","overallProf"), type="response", plot.type="contour", color="gray", main="", too.far=.1, xlab='OSC', ylab='Proficiency scores');
mod.vis.gam(gam1, view=c("OSC_Target","overallProf"), type="response", plot.type="contour",
color="gray", main="", too.far=.1, xlab='ORTHOGRAPHY SEMANTIC CONSISTENCY', ylab='PROFICIENCY',
cex.lab=1.5, cex.axis=1.5, cex.sub=1.5);
mod.vis.gam2(gam1, view=c("OSC_Target","overallProf"), type="response", plot.type="contour",
color="gay_pride", main="", too.far=.1, xlab='ORTHOGRAPHY-SEMANTICS CONSISTENCY', ylab='PROFICIENCY',
cex.lab=1.5, cex.axis=1.5, cex.sub=1.5);
gam1 <- gam(-1000/rt ~ s(OSC_Target, by = overallProf) + s(TrialCount) + s(Logfreq.Zipf.t) + s(Subject, bs = 're') + s(Target, bs = 're'), data = datartENG)
gam1 <- gam(-1000/rt ~ s(OSC_Target, by = Logfreq.Zipf.p) + s(TrialCount) + s(Logfreq.Zipf.t) + s(Subject, bs = 're') + s(Target, bs = 're'), data = datartENG)
mod.vis.gam2(gam1, view=c("OSC_Target","Logfreq.Zipf.p"), type="response", plot.type="contour",
color="gay_pride", main="", too.far=.1, xlab='ORTHOGRAPHY-SEMANTICS CONSISTENCY', ylab='Logfreq.Zipf.p',
cex.lab=1.5, cex.axis=1.5, cex.sub=1.5);
anova(proficiencyL2onL1);
proficiencyL2onL1a <- lmer(-1000/rt ~ Relatedness * Morphtype + rcs(TrialCount) + Logfreq.Zipf.t + Lent + (1|Subject) + (1|Target), data = datartITA);
anova(proficiencyL2onL1, proficiencyL2onL1a);
anova(proficiencyL2onL1b);
anova(proficiencyL2onL1c);
plotLMER.fnc(proficiencyL2onL1b, fun = inv, pred = "OSC_Target", intr = list("overallProf", quantile(datartITA$overallProf, c(.25,.50,.75,1)), "end"), addlines = T, ylab='RT(ms)', bty='l');
plotLMER.fnc(proficiencyL2onL1b, withList = TRUE, fun = inv, pred = "Relatedness",control = list("overallProf", quantile(datartITA$overallProf, .25)), intr = list("Morphtype", c("OR", "OP", "TR"), "end"), addlines = T, ylab='RT(ms)', xlabel = "Unrelated         Related", main='VERY LOW PROFICIENCY', ylimit = c(570,640), bty='l');
par(mfrow=c(1,4));
plotLMER.fnc(proficiencyL2onL1b, withList = TRUE, fun = inv, pred = "Relatedness",control = list("overallProf", quantile(datartITA$overallProf, .25)), intr = list("Morphtype", c("OR", "OP", "TR"), "end"), addlines = T, ylab='RT(ms)', xlabel = "Unrelated         Related", main='VERY LOW PROFICIENCY', ylimit = c(570,640), bty='l');
plotLMER.fnc(proficiencyL2onL1b, withList = TRUE, fun = inv, pred = "Relatedness",control = list("overallProf", quantile(datartITA$overallProf, .50)), intr = list("Morphtype", c("OR", "OP", "TR"), "end"), addlines = T, ylab='RT(ms)', xlabel = "Unrelated         Related", main='LOW PROFICIENCY', ylimit = c(570,640), bty='l');
plotLMER.fnc(proficiencyL2onL1b, withList = TRUE, fun = inv, pred = "Relatedness",control = list("overallProf", quantile(datartITA$overallProf, .75)), intr = list("Morphtype", c("OR", "OP", "TR"), "end"), addlines = T, ylab='RT(ms)', xlabel = "Unrelated         Related", main='HIGH PROFICIENCY', ylimit = c(570,640), bty='l');
plotLMER.fnc(proficiencyL2onL1b, withList = TRUE, fun = inv, pred = "Relatedness",control = list("overallProf", quantile(datartITA$overallProf, 1)), intr = list("Morphtype", c("OR", "OP", "TR"), "end"), addlines = T, ylab='RT(ms)', xlabel = "Unrelated         Related", main='VERY HIGH PROFICIENCY', ylimit = c(570,640), bty='l');
par(mfrow=c(1,1));
par(mfrow=c(1,4));
plotLMER.fnc(proficiencyL2onL1b, withList = TRUE, fun = inv, pred = "Relatedness",control = list("overallProf", quantile(datartITA$overallProf, .25)), intr = list("Morphtype", c("OR", "OP", "TR"), "end"), addlines = T, ylab='RT(ms)', xlabel = "Unrelated         Related", main='VERY LOW PROFICIENCY', bty='l');
plotLMER.fnc(proficiencyL2onL1b, withList = TRUE, fun = inv, pred = "Relatedness",control = list("overallProf", quantile(datartITA$overallProf, .50)), intr = list("Morphtype", c("OR", "OP", "TR"), "end"), addlines = T, ylab='RT(ms)', xlabel = "Unrelated         Related", main='LOW PROFICIENCY', bty='l');
plotLMER.fnc(proficiencyL2onL1b, withList = TRUE, fun = inv, pred = "Relatedness",control = list("overallProf", quantile(datartITA$overallProf, .75)), intr = list("Morphtype", c("OR", "OP", "TR"), "end"), addlines = T, ylab='RT(ms)', xlabel = "Unrelated         Related", main='HIGH PROFICIENCY' ,bty='l');
plotLMER.fnc(proficiencyL2onL1b, withList = TRUE, fun = inv, pred = "Relatedness",control = list("overallProf", quantile(datartITA$overallProf, 1)), intr = list("Morphtype", c("OR", "OP", "TR"), "end"), addlines = T, ylab='RT(ms)', xlabel = "Unrelated         Related", main='VERY HIGH PROFICIENCY', bty='l');
par(mfrow=c(1,1));
par(mfrow=c(1,4));
plotLMER.fnc(proficiencyL2onL1b, withList = TRUE, fun = inv, pred = "Relatedness",control = list("overallProf", quantile(datartITA$overallProf, .25)), intr = list("Morphtype", c("OR", "OP", "TR"), "end"), addlines = T, ylab='RT(ms)', xlabel = "Unrelated         Related", main='VERY LOW PROFICIENCY', ylimit = c(510,600) ,bty='l');
plotLMER.fnc(proficiencyL2onL1b, withList = TRUE, fun = inv, pred = "Relatedness",control = list("overallProf", quantile(datartITA$overallProf, .50)), intr = list("Morphtype", c("OR", "OP", "TR"), "end"), addlines = T, ylab='RT(ms)', xlabel = "Unrelated         Related", main='LOW PROFICIENCY', ylimit = c(510,600),bty='l');
plotLMER.fnc(proficiencyL2onL1b, withList = TRUE, fun = inv, pred = "Relatedness",control = list("overallProf", quantile(datartITA$overallProf, .75)), intr = list("Morphtype", c("OR", "OP", "TR"), "end"), addlines = T, ylab='RT(ms)', xlabel = "Unrelated         Related", main='HIGH PROFICIENCY', ylimit = c(510,600),bty='l');
plotLMER.fnc(proficiencyL2onL1b, withList = TRUE, fun = inv, pred = "Relatedness",control = list("overallProf", quantile(datartITA$overallProf, 1)), intr = list("Morphtype", c("OR", "OP", "TR"), "end"), addlines = T, ylab='RT(ms)', xlabel = "Unrelated         Related", main='VERY HIGH PROFICIENCY',ylimit = c(510,600), bty='l');
par(mfrow=c(1,1));
gam1 <- gam(-1000/rt ~ s(OSC_Target, by = Logfreq.Zipf.p) + s(TrialCount) + s(Logfreq.Zipf.t) + s(Subject, bs = 're') + s(Target, bs = 're'), data = datartENG)
mod.vis.gam2(gam1, view=c("OSC_Target","Logfreq.Zipf.p"), type="response", plot.type="contour",
color="gay_pride", main="", too.far=.1, xlab='ORTHOGRAPHY-SEMANTICS CONSISTENCY', ylab='Logfreq.Zipf.p',
cex.lab=1.5, cex.axis=1.5, cex.sub=1.5);
summary(gam1)
gam2 <- gam(-1000/rt ~ te(OSC_Target, Logfreq.Zipf.p, overallProf) + s(TrialCount) + s(Logfreq.Zipf.t) + s(Subject, bs = 're') + s(Target, bs = 're'), data = datartENG)
summary(gam2)
rm(list = ls())
read.table('C:/Users/Eva Viviani/OneDrive/Documenti/SISSA - Experiments/M3-Wordlearning/Psychopino/python code for tp and bigrams/subtlex-dfnovelwrds1.txt', header = T, sep = ',')-> nonwordList
head(nonwordList)
summary(nonwordList)
?nchar
subset(nonwordList, charlength>=6 & charlength<=8)-> nonWords
head(nonWords)
write.table(nonWords,'C:/Users/Eva Viviani/OneDrive/Documenti/SISSA - Experiments/M3-Wordlearning/nonwordList.txt', row.names= F, col.names = T, quote = F)
subtlex<-read.table("C:/Users/Eva Viviani/OneDrive/Documenti/R/subtlex-it.txt", header=T) #see "http://crr.ugent.be/subtlex-it"; Crepaldi, Keuleers, Mandera & Brysbaert, 2013
head(nonWords)
merge(subtlex, nonWords, by = 'spelling', all.x = T)-> chek
merge(nonWords, subtlex,by = 'spelling', all.x = T)-> chek
head(check)
head(chek)
summary(chek)
View(chek)
write.table(chek,'C:/Users/Eva Viviani/OneDrive/Documenti/SISSA - Experiments/M3-Wordlearning/nonwordList.txt', row.names= F, col.names = T, quote = F)
read.table('C:/Users/Eva Viviani/OneDrive/Documenti/SISSA - Experiments/M3-Wordlearning/Psychopino/python code for tp and bigrams/subtlex-dfnovelwrds1.txt', header = T, sep = ',')-> nonwordList
head(nonwordList)
summary(nonwordList)
subset(nonwordList, charlength>=6 & charlength<=8)-> nonWords
head(nonWords)
subtlex<-read.table("C:/Users/Eva Viviani/OneDrive/Documenti/R/subtlex-it.txt", header=T) #see "http://crr.ugent.be/subtlex-it"; Crepaldi, Keuleers, Mandera & Brysbaert, 2013
merge(nonWords, subtlex,by = 'spelling', all.x = T)-> chek
write.table(chek,'C:/Users/Eva Viviani/OneDrive/Documenti/SISSA - Experiments/M3-Wordlearning/List.txt', row.names= F, col.names = T, quote = F)
read.table('C:/Users/Eva Viviani/OneDrive/Documenti/SISSA - Experiments/M3-Wordlearning/Psychopino/python code for tp and bigrams/subtlex-dfnovelwrds1.txt', header = T, sep = ',')-> nonwordList
read.table('C:/Users/Eva Viviani/OneDrive/Documenti/SISSA - Experiments/M3-Wordlearning/Psychopino/python code for tp and bigrams/subtlex-dfnovelwrds1.txt', header = T, sep = ',')-> nonwordList
read.table('C:/Users/Eva Viviani/OneDrive/Documenti/SISSA - Experiments/M3-Wordlearning/Psychopino/python code for tp and bigrams/subtlex-dfnovelwrds1.txt', header = T, sep = ',')-> nonwordList
read.table('C:/Users/Eva Viviani/OneDrive/Documenti/SISSA - Experiments/M3-Wordlearning/Psychopino/python code for tp and bigrams/subtlex-dfnovelwrds1.txt', header = T, sep = ',')-> nonwordList
read.table('C:/Users/Eva Viviani/OneDrive/Documenti/SISSA - Experiments/M3-Wordlearning/Psychopino/python code for tp and bigrams/subtlex-dfnovelwrds1.txt', header = T, sep = ',')-> nonwordList
head(nonwordList)
summary(nonwordList)
subset(nonwordList, charlength>=6 & charlength<=8)-> nonWords
head(nonWords)
subtlex<-read.table("C:/Users/Eva Viviani/OneDrive/Documenti/R/subtlex-it.txt", header=T) #see "http://crr.ugent.be/subtlex-it"; Crepaldi, Keuleers, Mandera & Brysbaert, 2013
merge(nonWords, subtlex,by = 'spelling', all.x = T)-> chek
write.table(chek,'C:/Users/Eva Viviani/OneDrive/Documenti/SISSA - Experiments/M3-Wordlearning/List.txt', row.names= F, col.names = T, quote = F)
read.table('C:/Users/Eva Viviani/OneDrive/Documenti/SISSA - Experiments/M3-Wordlearning/Psychopino/python code for tp and bigrams/nonwordList.txt', header = T)-> nonwordList
head(nonwordList)
summary(nonwordList)
str(nonwordList)
nonwordList[!duplicated(nonwordList),]-> prova
summary(prova)
nonwordList[!duplicated(nonwordList),]->
rm(prova)
nonwordList[!duplicated(nonwordList),]->
rm(prova)
rm(prova)
nonwordList[!duplicated(nonwordList),]-> nonwordList;
rm(subtlex, nonWords, chek)
summary(nonwordList)
subtlex<-read.table("C:/Users/Eva Viviani/OneDrive/Documenti/R/subtlex-it.txt", header=T) #see "http://crr.ugent.be/subtlex-it"; Crepaldi, Keuleers, Mandera & Brysbaert, 2013
library(vwr)
old20(nonwordList$spelling, as.character(subtlex$spelling))-> o20
head(o20)
summary(o20)
rm(list = ls())
read.table('C:/Users/Eva Viviani/Desktop/exp.txt', header = F)-> soundWave
head(soundWave)
read.table('C:/Users/Eva Viviani/Desktop/exp.txt', header = F, sep = '\t')-> soundWave
head(soundWave)
plot(soundWave[1:80000])
plot(soundWave[1:80000,])
plot(soundWave[,1:80000])
plot(soundWave[1,1:80000])
View(soundWave)
plot(soundWave[1,1)
plot(soundWave[1,1])
plot(soundWave[1,1:80000])
str(soundWave)
library(ngram)
library(tau)
install.packages('tau')
library(tau)
txt <- "The quick brown fox jumps over the lazy dog."
textcnt(txt, method = "ngram")
textcnt(txt, method = "ngram")-> a
head(a)
data.frame(a)-> a
a<-data.frame(counts = unclass(r), size = nchar(names(a)))
a<-data.frame(counts = unclass(a), size = nchar(names(a)))
View(a)
txt
txt <- "c era una volta un vecchio asino che aveva lavorato"
data <- c("c", "e" ,"er", "ra", "era", "a", "u","un", "na", "una", "v", "vo", "ol", "lt", "ta", "vol", "olt", "lta", "a", "u", "n", "un", "v", "ve", "ec", "cc", "ch", "hi", "io", "vec", "cch", "chi", "hio", "o", "a", "si", "in", "o", "asi", "sin", "ino", "c","e", "ch", "he", "a", "av", "ev", "va","a", "ave", "eva", "l", "o", "la","vo", "ra", "to", "lav", "avo", "vor","ora","rat","ato")
data$len <- nchar(data)
a <- data
rm(data)
a$len <- nchar(a)
head(a)
head(a, n = 30)
sort(a)-> a
str(a)
df <- a[order(a),]
df <- a[order(a$``),]
txt
prova <- ifelse(substr(txt)=='a', "x", "")
prova <- ifelse(substr(txt,1)=='a', "x", "")
prova <- ifelse(substr(txt,1,1)=='a', "x", "")
prova
prova <- ifelse(substr(txt,1:length(txt))=='a', "x", "")
prova <- ifelse(substr(txt,1,length(txt))=='a', "x", "")
prova
prova <- ifelse(substr(txt,1,length(txt))=='a', "x", "")
length(txt)
as.dataframe(length(txt))
length(data.frame(txt))
prova <- ifelse(substr(a,1,length(a))=='_', "x", "xxx")
prova
length(a)
prova <- gsub('_', 'x', a)
prova
prova <- data.frame(gsub('_', 'x', a))
View(prova)
head(prova)
head(a)
rm(list = ls())
setwd('C:/Users/Eva Viviani/Documents/GitHub/M2-maskedprimingBilinguals');
localGitDir <- 'C:/Users/Eva Viviani/Documents/GitHub/M2-maskedprimingBilinguals';
rotations <- read.table(paste(localGitDir,'/stimoli/rotations.txt', sep=''), header = T);
finalNumberofParticipants <- 80
eng = NULL
for (j in 1:finalNumberofParticipants){
if ((j %% 2) ==0 ){ #EVEN SUBJ
boh <- paste(localGitDir, '/data/raw data/ENG/Output_MPrim_Eng_Subj_', j, ".txt", sep = "")
if (file.exists(boh)) {
pilot_eng <- read.table(boh, header = F, skip = 15,dec = ",")
colnames(pilot_eng) <- c("Subject", "Age", "Gender", "Handedness", "Rotation","Data", "OraStart", "TrialCount", "TrialType", "Prime", "Target", "Relatedness", "rt", "Resp")
rot_B_eng <- subset(rotations, rotations$Rotation=='B' & rotations$Language=='eng')
merge(pilot_eng, rot_B_eng, by = "Target", all.x = T)-> pilot_eng
} else {next}
} else { #ODD
boh <- paste(localGitDir, '/data/raw data/ENG/Output_MPrim_Eng_Subj_', j, ".txt", sep = "")
if (file.exists(boh)) {
pilot_eng <- read.table(boh, header = F, skip = 15,dec = ",")
colnames(pilot_eng) <- c("Subject", "Age", "Gender", "Handedness", "Rotation","Data", "OraStart", "TrialCount", "TrialType", "Prime", "Target", "Relatedness", "rt", "Resp")
rot_A_eng <- subset(rotations, rotations$Rotation=='A' & rotations$Language=='eng')
merge(pilot_eng, rot_A_eng, by = "Target", all.x = T)-> pilot_eng
} else {next}
}
pilot_eng$Prime.y <- NULL
pilot_eng$rt <- as.numeric(pilot_eng$rt)
pilot_eng$Rotation.y <- NULL
eng <- rbind(eng,pilot_eng)
}
subset(eng, eng$Subject==62)-> ss62
head(ss62)
rm(list = ls())
eng = NULL
for (j in 1:finalNumberofParticipants){
if ((j %% 2) ==0 ){ #EVEN SUBJ
boh <- paste(localGitDir, '/data/raw data/ENG/Output_MPrim_Eng_Subj_', j, ".txt", sep = "")
if (file.exists(boh)) {
pilot_eng <- read.table(boh, header = F, skip = 15,dec = ",")
colnames(pilot_eng) <- c("Subject", "Age", "Gender", "Handedness", "Rotation","Data", "OraStart", "TrialCount", "TrialType", "Prime", "Target", "Relatedness", "rt", "Resp")
rot_B_eng <- subset(rotations, rotations$Rotation=='B' & rotations$Language=='eng')
merge(pilot_eng, rot_B_eng, by = "Target", all.x = T)-> pilot_eng
} else {next}
} else { #ODD
boh <- paste(localGitDir, '/data/raw data/ENG/Output_MPrim_Eng_Subj_', j, ".txt", sep = "")
if (file.exists(boh)) {
pilot_eng <- read.table(boh, header = F, skip = 15,dec = ",")
colnames(pilot_eng) <- c("Subject", "Age", "Gender", "Handedness", "Rotation","Data", "OraStart", "TrialCount", "TrialType", "Prime", "Target", "Relatedness", "rt", "Resp")
rot_A_eng <- subset(rotations, rotations$Rotation=='A' & rotations$Language=='eng')
merge(pilot_eng, rot_A_eng, by = "Target", all.x = T)-> pilot_eng
} else {next}
}
pilot_eng$Prime.y <- NULL
pilot_eng$rt <- as.numeric(pilot_eng$rt)
pilot_eng$Rotation.y <- NULL
eng <- rbind(eng,pilot_eng)
}
finalNumberofParticipants <- 80
rotations <- read.table(paste(localGitDir,'/stimoli/rotations.txt', sep=''), header = T);
localGitDir <- 'C:/Users/Eva Viviani/Documents/GitHub/M2-maskedprimingBilinguals';
rotations <- read.table(paste(localGitDir,'/stimoli/rotations.txt', sep=''), header = T);
for (j in 1:finalNumberofParticipants){
if ((j %% 2) ==0 ){ #EVEN SUBJ
boh <- paste(localGitDir, '/data/raw data/ENG/Output_MPrim_Eng_Subj_', j, ".txt", sep = "")
if (file.exists(boh)) {
pilot_eng <- read.table(boh, header = F, skip = 15,dec = ",")
colnames(pilot_eng) <- c("Subject", "Age", "Gender", "Handedness", "Rotation","Data", "OraStart", "TrialCount", "TrialType", "Prime", "Target", "Relatedness", "rt", "Resp")
rot_B_eng <- subset(rotations, rotations$Rotation=='B' & rotations$Language=='eng')
merge(pilot_eng, rot_B_eng, by = "Target", all.x = T)-> pilot_eng
} else {next}
} else { #ODD
boh <- paste(localGitDir, '/data/raw data/ENG/Output_MPrim_Eng_Subj_', j, ".txt", sep = "")
if (file.exists(boh)) {
pilot_eng <- read.table(boh, header = F, skip = 15,dec = ",")
colnames(pilot_eng) <- c("Subject", "Age", "Gender", "Handedness", "Rotation","Data", "OraStart", "TrialCount", "TrialType", "Prime", "Target", "Relatedness", "rt", "Resp")
rot_A_eng <- subset(rotations, rotations$Rotation=='A' & rotations$Language=='eng')
merge(pilot_eng, rot_A_eng, by = "Target", all.x = T)-> pilot_eng
} else {next}
}
pilot_eng$Prime.y <- NULL
pilot_eng$rt <- as.numeric(pilot_eng$rt)
pilot_eng$Rotation.y <- NULL
eng <- rbind(eng,pilot_eng)
}
subset(eng, eng$Subject==621)-> ss62
head(ss62)
subset(eng, eng$Subject=='621')-> ss62
head(ss62)
subset(eng, eng$Subject==61)-> ss62
View(eng)
subset(eng, eng$Subject==1)-> ss62
subset(eng, eng$Subject==621)-> ss62
