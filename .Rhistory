y <- c(0.9, 0.8, 0.7, 0.6,
0.45, 0.35, 0.30, 0.25,
0.21,0.18, 0.17, 0.16,
0.14,0.13,0.13,0.13,0.13);
#smoothing and plotting
lo <- loess(y~x);
xl <- seq(min(x),max(x), (max(x) - min(x))/1000);
plot(x,y, ylim=c(-.03,1), xlim=c(0,1.08), type='n', axes=F, xlab='', ylab='');
lines(xl, predict(lo,xl), col='black', lwd=2, lty = 'dotted');
##### opaque line ####
x1 <- c(0.01, 0.05, 0.1, 0.15,
0.2, 0.25, 0.3, 0.32,
0.35, 0.4, 0.45, 0.48,
0.5, 0.6,0.7,0.8,
0.9, 1);
y1 <- c(0.9, 0.8, 0.7, 0.6,
0.45, 0.35, 0.30, 0.28,
0.25, 0.21,0.19, 0.17,
0.16, 0.15,0.14,0.6,
0.65, 0.7);
lo <- loess(y1~x1);
xl1 <- seq(min(x1),max(x1), (max(x1) - min(x1))/100);
lines(xl1, predict(lo,xl1), col='black', lwd=2, lty = 'longdash');
#### transparent line####
x2 <- c(0.01, 0.05, 0.1, 0.15,
0.2, 0.25, 0.3, 0.35,
0.4, 0.45, 0.5, 0.55,
0.6, 0.65, 0.7, 0.75,
0.8, 1);
#this makes the transparent line diverging from the orthographic line earlier
# y2 <- c(0.95, 0.8, 0.7, 0.65,
#         0.62, 0.60, 0.62, 0.65,
#         0.68, 0.71, 0.73, 0.77,
#         0.8, 0.84, 0.87, 0.9,
#         0.92, 0.95);
y2 <- c(0.9, 0.8, 0.7, 0.65,
0.5, 0.4, 0.49, 0.52,
0.59, 0.65, 0.7, 0.75,
0.8, 0.84, 0.87, 0.9,
0.92, 0.95);
lo <- loess(y2~x2);
xl2 <- seq(min(x2),max(x2), (max(x2) - min(x2))/40);
lines(xl2, predict(lo,xl2), col='black', lwd=2, lty = 'solid');
axis(1, at=c(0,1), labels = c('Low', 'High')); #
axis(2, at=c(0,1), labels = c('Low', 'High'));
title(xlab = 'Proficiency', ylab = 'Priming');
#text
#lexical inhibition
segments(0.02, 0.05, 0.55, 0.05, col= 'black', cex=.5) #horiz
segments(0.02, 0.08, 0.02, 0.02, col= 'black', cex=.5) #verticals sx
segments(0.55, 0.08, 0.55, 0.02, col= 'black', cex=.5) #vertical dx
text(0.28, 0.015, 'Lexical Inhibition', cex = .57)
#morphological chunking
segments(0.58, 0.05, 1, 0.05, col= 'black', cex=.5) #horiz
segments(0.58, 0.08, 0.58, 0.02, col= 'black', cex=.5) #verticals sx
segments(1, 0.08, 1, 0.02, col= 'black', cex=.5) #vertical dx
text(0.79, 0.015, 'Morpho-Orthographic', cex = .57)
text(0.79, -.03, 'Chunking', cex = .57)
#This is the appropriate labelling for the early-diverging transparent line
# par(xpd=TRUE)
# segments(0.15, 1.05, 1, 1.05, col= 'black', cex=.5) #horiz
# segments(0.15, 1.08, 0.15, 1.02, col= 'black', cex=.5) #verticals sx
# segments(1, 1.08, 1, 1.02, col= 'black', cex=.5) #vertical dx
# text(0.575, 1.08, 'Sensitivity to Transparent Morphology', cex = .61)
par(xpd=TRUE)
segments(0.28, 1.05, 1, 1.05, col= 'black', cex=.5) #horiz
segments(0.28, 1.08, 0.28, 1.02, col= 'black', cex=.5) #verticals sx
segments(1, 1.08, 1, 1.02, col= 'black', cex=.5) #vertical dx
text(0.64, 1.08, 'Sensitivity to Transparent Morphology', cex = .57)
text(.98, .95, 'Transparent', pos=4, cex=.57);
text(.98, .91, 'Priming', pos=4, cex=.57);
text(.98, .79, 'Opaque', pos=4, cex=.57);
text(.98, .75, 'Priming', pos=4, cex=.57);
text(.98, .145, 'Orthographic', pos=4, cex=.57);
text(.98, .105, 'Priming', pos=4, cex=.57);
dev.off();
localGitDir <- 'C:/Users/eva_v/Desktop';
jpeg(paste(localGitDir,'/morpholexicalActivation.jpg', sep = ''),
width = 4, height = 4,  units = 'in', res = 300);
par(mar=c(4.5,4,2,2)+.1);
#put in x and y the points you like
#### orthographic line ####
x <- c(0.01, 0.05, 0.1, 0.15,
0.2, 0.25, 0.3, 0.35,
0.4, 0.45, 0.48, 0.5,
0.6,0.7,0.8,0.9,1);
y <- c(0.9, 0.8, 0.7, 0.6,
0.45, 0.35, 0.30, 0.25,
0.21,0.18, 0.17, 0.16,
0.14,0.13,0.13,0.13,0.13);
#smoothing and plotting
lo <- loess(y~x);
xl <- seq(min(x),max(x), (max(x) - min(x))/1000);
plot(x,y, ylim=c(-.03,1), xlim=c(0,1.08), type='n', axes=F, xlab='', ylab='');
lines(xl, predict(lo,xl), col='black', lwd=2, lty = 'dotted');
##### opaque line ####
x1 <- c(0.01, 0.05, 0.1, 0.15,
0.2, 0.25, 0.3, 0.32,
0.35, 0.4, 0.45, 0.48,
0.5, 0.6,0.7,0.8,
0.9, 1);
y1 <- c(0.9, 0.8, 0.7, 0.6,
0.45, 0.35, 0.30, 0.28,
0.25, 0.21,0.19, 0.17,
0.16, 0.15,0.14,0.6,
0.65, 0.7);
lo <- loess(y1~x1);
xl1 <- seq(min(x1),max(x1), (max(x1) - min(x1))/100);
lines(xl1, predict(lo,xl1), col='black', lwd=2, lty = 'longdash');
#### transparent line####
x2 <- c(0.01, 0.05, 0.1, 0.15,
0.2, 0.25, 0.3, 0.35,
0.4, 0.45, 0.5, 0.55,
0.6, 0.65, 0.7, 0.75,
0.8, 1);
#this makes the transparent line diverging from the orthographic line earlier
# y2 <- c(0.95, 0.8, 0.7, 0.65,
#         0.62, 0.60, 0.62, 0.65,
#         0.68, 0.71, 0.73, 0.77,
#         0.8, 0.84, 0.87, 0.9,
#         0.92, 0.95);
y2 <- c(0.9, 0.8, 0.7, 0.65,
0.5, 0.4, 0.49, 0.52,
0.59, 0.65, 0.7, 0.75,
0.8, 0.84, 0.87, 0.9,
0.92, 0.95);
lo <- loess(y2~x2);
xl2 <- seq(min(x2),max(x2), (max(x2) - min(x2))/40);
lines(xl2, predict(lo,xl2), col='black', lwd=2, lty = 'solid');
axis(1, at=c(0,1), labels = c('Low', 'High')); #
axis(2, at=c(0,1), labels = c('Low', 'High'));
title(xlab = 'Proficiency', ylab = 'Priming');
#text
#lexical inhibition
segments(0.02, 0.05, 0.55, 0.05, col= 'black', cex=.5) #horiz
segments(0.02, 0.08, 0.02, 0.02, col= 'black', cex=.5) #verticals sx
segments(0.55, 0.08, 0.55, 0.02, col= 'black', cex=.5) #vertical dx
text(0.28, 0.015, 'Lexical Inhibition', cex = .57)
#morphological chunking
segments(0.58, 0.05, 1, 0.05, col= 'black', cex=.5) #horiz
segments(0.58, 0.08, 0.58, 0.02, col= 'black', cex=.5) #verticals sx
segments(1, 0.08, 1, 0.02, col= 'black', cex=.5) #vertical dx
text(0.79, 0.015, 'Morpho-Orthographic', cex = .57)
text(0.79, -.03, 'Chunking', cex = .57)
#This is the appropriate labelling for the early-diverging transparent line
# par(xpd=TRUE)
# segments(0.15, 1.05, 1, 1.05, col= 'black', cex=.5) #horiz
# segments(0.15, 1.08, 0.15, 1.02, col= 'black', cex=.5) #verticals sx
# segments(1, 1.08, 1, 1.02, col= 'black', cex=.5) #vertical dx
# text(0.575, 1.08, 'Sensitivity to Transparent Morphology', cex = .61)
par(xpd=TRUE)
segments(0.28, 1.05, 1, 1.05, col= 'black', cex=.5) #horiz
segments(0.28, 1.08, 0.28, 1.02, col= 'black', cex=.5) #verticals sx
segments(1, 1.08, 1, 1.02, col= 'black', cex=.5) #vertical dx
text(0.64, 1.08, 'Sensitivity to Transparent Morphology', cex = .57)
text(.98, .95, 'Transparent', pos=4, cex=.57);
text(.98, .91, 'Priming', pos=4, cex=.57);
text(.98, .79, 'Opaque', pos=4, cex=.57);
text(.98, .75, 'Priming', pos=4, cex=.57);
text(.98, .145, 'Orthographic', pos=4, cex=.57);
text(.98, .105, 'Priming', pos=4, cex=.57);
dev.off();
rm(list = ls());
localGitDir <- 'C:/Users/eva_v/Documents/GitHub/M2-maskedprimingBilinguals';
setwd(localGitDir);
read.table(paste(localGitDir, '/preprocessedData.txt', sep = ''), header = T, sep='\t', dec='.') -> masterFile;
head(masterFile);
summary(masterFile);
inv <- function(x) {-1000/x};
subset(masterFile, language=="ita") -> masterFileIta;
dataItaAcc <- subset(masterFileIta, lexicality=="word");
dataItaTemp <- subset(dataItaAcc, accuracy==1);
dataIta <- subset(dataItaTemp, rt>280 & rt<2500 & subject!=15 & subject!=2 & subject!=31 & target!= "guano" & target!= "uggia" & target!= "vello");
nrow(dataItaTemp)-nrow(dataIta);
(nrow(dataItaTemp)-nrow(dataIta)) / nrow(dataItaTemp);
nrow(dataIta);
summary(dataIta);
subset(masterFile, language=="eng") -> masterFileEng;
cor(masterFileEng[masterFileEng$subject==26 & masterFileEng$lexicality=='word', c('rt','freqTarget')], use = 'pairwise.complete.obs'); #unlikely s/he responded randomly. So, let's fix this:
library(car);
masterFileEng$accuracy[masterFileEng$subject==26] <- recode(masterFileEng$accuracy[masterFileEng$subject==26], "1=0;0=1");
dataEngAcc <- subset(masterFileEng, lexicality=="word");
dataEngTemp <- subset(dataEngAcc, accuracy==1);
dataEng <- subset(dataEngTemp, rt>300 & rt<2000 & subject!=15 & subject!=22 & subject!=43);
nrow(dataEngTemp)-nrow(dataEng);
(nrow(dataEngTemp)-nrow(dataEng)) / nrow(dataEngTemp);
nrow(dataEng);
summary(dataEng);
#we introduce the varibles of interest now
italmer2 <- lmer(-1000/rt ~ relatedness * morphType + freqTarget + (1|subject) + (1|target), data= dataIta, REML = T);
summary(italmer2); #residuals are rather symmetrical -- clean bill of health
#outliers trimming, a la Baayen (2008)
italmer2b <- lmer(-1000/rt ~ relatedness * morphType + freqTarget + (1|subject) + (1|target), data=subset(dataIta, abs(scale(resid(italmer2)))<2.5), REML = T);
anova(italmer2b); #here we get the overall significance of the interaction btw prime type and relatedness
summary(italmer2b);#here we get the parameters for contrasts across individual conditions
library(lmerTest)
#we introduce the varibles of interest now
italmer2 <- lmer(-1000/rt ~ relatedness * morphType + freqTarget + (1|subject) + (1|target), data= dataIta, REML = T);
summary(italmer2); #residuals are rather symmetrical -- clean bill of health
#outliers trimming, a la Baayen (2008)
italmer2b <- lmer(-1000/rt ~ relatedness * morphType + freqTarget + (1|subject) + (1|target), data=subset(dataIta, abs(scale(resid(italmer2)))<2.5), REML = T);
anova(italmer2b); #here we get the overall significance of the interaction btw prime type and relatedness
summary(italmer2b);#here we get the parameters for contrasts across individual conditions
englmer2 <- lmer(-1000/rt ~ relatedness * morphType + freqTarget + lengthTarget + (1|subject) + (1|target), data= dataEng, REML = T);
summary(englmer2); #residuals are quite symmetrical
#outliers trimming, a la Baayen (2008)
englmer2b <- lmer(-1000/rt ~ relatedness * morphType + freqTarget + lengthTarget + (1|subject) + (1|target), data=subset(dataEng, abs(scale(resid(englmer2)))<2.5), REML = T);
anova(englmer2b); #here we get the overall significance of the interaction btw prime type and relatedness
summary(englmer2b); #here we get the parameters for contrasts across individual conditions
df <- effect("relatedness:morphType",italmer2b);
library(ggplot2);
library(rms);
library(effects);
library(plyr);
library(corrplot);
# figure 1 of the paper
df <- effect("relatedness:morphType",italmer2b);
df <- as.data.frame(df);
df$fit <- inv(df$fit);
df$lower <- inv(df$lower);
df$upper <- inv(df$upper);
revalue(df$relatedness, c("ctrl"="Unrelated"))-> df$relatedness;
revalue(df$relatedness, c("rel"="Related"))-> df$relatedness;
dodge1 <- position_dodge(width = 0.25);
bb  <-ggplot(data = df, aes(x = relatedness, y = fit,group = morphType)) +
geom_point(size = 2, position = dodge1) +
geom_line(aes(linetype=morphType), position = dodge1) +
scale_linetype_manual(values=c("dashed", "dotted", "solid")) +
theme_classic();
bb  <- bb + geom_pointrange(aes(ymin = df$lower, ymax = df$upper), position = dodge1) ;
bb  <- bb + scale_y_continuous("RT(ms)") ;
bb  <- bb + theme(axis.title.y = element_text(size = rel(1), angle = 90));
bb  <- bb + theme(axis.text.y = element_text(angle = 00, hjust = 1, size=10, colour = 'black'));
bb  <- bb + theme(axis.title.x = element_blank());
bb <- bb + labs(title='L1 - Italian');
bb <- bb + theme(plot.title= element_text(angle = 00, hjust=0.5, size=15, face = 'bold', colour = 'black'));
bb <- bb + theme(legend.position="none");
bb;
ggsave("itaplot.jpg", width = 3, height = 3, dpi = 300);
df <- effect("relatedness:morphType",englmer2b);
df <- as.data.frame(df);
df$fit <- inv(df$fit);
df$lower <- inv(df$lower);
df$upper <- inv(df$upper);
revalue(df$relatedness, c("ctrl"="Unrelated"))-> df$relatedness;
revalue(df$relatedness, c("rel"="Related"))-> df$relatedness;
dodge <- position_dodge(width = 0.25);
gg  <-ggplot(data = df, aes(x = relatedness, y = fit,group = morphType)) +
geom_point(size = 2, position = dodge) +
geom_line(aes(linetype=morphType), position = dodge) +
scale_linetype_manual(values=c("dashed", "dotted", "solid")) +
theme_classic();
gg  <- gg + geom_pointrange(aes(ymin = df$lower, ymax = df$upper), position = dodge);
gg  <- gg + scale_y_continuous("RT (ms)") ;
gg  <- gg + theme(axis.text.y = element_text(angle = 00, hjust = 1, size=10, colour = 'black'));
gg  <- gg + theme(axis.title.x = element_blank());
gg <- gg + labs(title='L2 - English');
gg <- gg + theme(plot.title= element_text(angle = 00, hjust=0.5, size=15, face = 'bold', colour = 'black'));
gg + theme(legend.position="none");
ggsave("engplot.jpg", width = 3, height = 3, dpi = 300);
# figure 1 of the paper
df <- effect("relatedness:morphType",italmer2b);
df <- as.data.frame(df);
df$fit <- inv(df$fit);
df$lower <- inv(df$lower);
df$upper <- inv(df$upper);
revalue(df$relatedness, c("ctrl"="Unrelated"))-> df$relatedness;
revalue(df$relatedness, c("rel"="Related"))-> df$relatedness;
dodge1 <- position_dodge(width = 0.25);
bb  <-ggplot(data = df, aes(x = relatedness, y = fit,group = morphType)) +
geom_point(size = 2, position = dodge1) +
geom_line(aes(linetype=morphType), position = dodge1) +
scale_linetype_manual(values=c("dashed", "dotted", "solid")) +
theme_classic();
bb  <- bb + geom_pointrange(aes(ymin = df$lower, ymax = df$upper), position = dodge1) ;
bb  <- bb + scale_y_continuous("RT(ms)") ;
bb  <- bb + theme(axis.title.y = element_text(size = rel(1), angle = 90));
bb  <- bb + theme(axis.text.y = element_text(angle = 00, hjust = 1, size=10, colour = 'black'));
bb  <- bb + theme(axis.title.x = element_blank());
bb <- bb + labs(title='L1 - Italian');
bb <- bb + theme(plot.title= element_text(angle = 00, hjust=0.5, size=15, face = 'bold', colour = 'black'));
bb <- bb + theme(legend.position="none");
bb;
ggsave("itaplot.jpg", width = 4, height = 3, dpi = 300);
df <- effect("relatedness:morphType",englmer2b);
df <- as.data.frame(df);
df$fit <- inv(df$fit);
df$lower <- inv(df$lower);
df$upper <- inv(df$upper);
revalue(df$relatedness, c("ctrl"="Unrelated"))-> df$relatedness;
revalue(df$relatedness, c("rel"="Related"))-> df$relatedness;
dodge <- position_dodge(width = 0.25);
gg  <-ggplot(data = df, aes(x = relatedness, y = fit,group = morphType)) +
geom_point(size = 2, position = dodge) +
geom_line(aes(linetype=morphType), position = dodge) +
scale_linetype_manual(values=c("dashed", "dotted", "solid")) +
theme_classic();
gg  <- gg + geom_pointrange(aes(ymin = df$lower, ymax = df$upper), position = dodge);
gg  <- gg + scale_y_continuous("RT (ms)") ;
gg  <- gg + theme(axis.text.y = element_text(angle = 00, hjust = 1, size=10, colour = 'black'));
gg  <- gg + theme(axis.title.x = element_blank());
gg <- gg + labs(title='L2 - English');
gg <- gg + theme(plot.title= element_text(angle = 00, hjust=0.5, size=15, face = 'bold', colour = 'black'));
gg + theme(legend.position="none");
ggsave("engplot.jpg", width = 4, height = 3, dpi = 300);
#what sort of effect this is? [Figure 3 in the paper]
temp <- data.frame(effect('relatedness:morphType:phonemicFluency', proficiencylmer1b, se=list(level=.95), xlevels=list(phonemicFluency=quantile(dataEng$phonemicFluency, probs=c(.05,.50,.95)))));
temp[,c('fit','lower','upper')] <- inv(temp[,c('fit','lower','upper')]);
revalue(temp$relatedness, c("rel"="Related"))-> temp$relatedness;
revalue(temp$relatedness, c("ctrl"="Unrelated"))-> temp$relatedness;
phonemicFluency_names <- c(
"10" = "Low Fluency",
"23" = "Medium Fluency",
"39" = "High Fluency");
library(plyr)
#what sort of effect this is? [Figure 3 in the paper]
temp <- data.frame(effect('relatedness:morphType:phonemicFluency', proficiencylmer1b, se=list(level=.95), xlevels=list(phonemicFluency=quantile(dataEng$phonemicFluency, probs=c(.05,.50,.95)))));
temp[,c('fit','lower','upper')] <- inv(temp[,c('fit','lower','upper')]);
revalue(temp$relatedness, c("rel"="Related"))-> temp$relatedness;
revalue(temp$relatedness, c("ctrl"="Unrelated"))-> temp$relatedness;
phonemicFluency_names <- c(
"10" = "Low Fluency",
"23" = "Medium Fluency",
"39" = "High Fluency");
temp <- data.frame(effect('relatedness:morphType:phonemicFluency', proficiencylmer1b, se=list(level=.95), xlevels=list(phonemicFluency=quantile(dataEng$phonemicFluency, probs=c(.05,.50,.95)))));
#does proficiency specifically interact with priming?
proficiencylmer1b <- lmer(-1000/rt ~ relatedness * morphType * phonemicFluency + trialCount + freqTarget + lengthTarget + (1|subject) + (1|target), data = subset(dataEng, abs(scale(resid(proficiencylmer1)))<2.5), REML = T);
anova(proficiencylmer1b);
proficiencylmer2b <- lmer(-1000/rt ~ relatedness *  morphType * phonemicComprehension + freqTarget + lengthTarget + (1|subject) + (1|target), data = subset(dataEng, abs(scale(resid(proficiencylmer2)))<2.5), REML = T);
anova(proficiencylmer2b);
proficiencylmer3b <- lmer(-1000/rt ~ relatedness *  morphType * morphComprehension + freqTarget + lengthTarget + (1|subject) + (1|target), data = subset(dataEng, abs(scale(resid(proficiencylmer3)))<2.5), REML = T);
anova(proficiencylmer3b);
proficiencylmer0 <- lmer(-1000/rt ~ relatedness * morphType + freqTarget + lengthTarget + (1|subject) + (1|target), data = dataEng, REML = T); #this establishes the baseline model, with no proficiency score
#here we test whether each individual proficiency score guarantees a better overall fit
proficiencylmer1 <- lmer(-1000/rt ~ relatedness * morphType * phonemicFluency  + freqTarget + lengthTarget + (1|subject) + (1|target), data = dataEng, REML = T);
anova(proficiencylmer0, proficiencylmer1);
proficiencylmer2 <- lmer(-1000/rt ~ relatedness *  morphType * phonemicComprehension + freqTarget + lengthTarget + (1|subject) + (1|target), data = dataEng, REML = T);
anova(proficiencylmer0, proficiencylmer2);
proficiencylmer3 <- lmer(-1000/rt ~ relatedness *  morphType * morphComprehension + freqTarget + lengthTarget + (1|subject) + (1|target), data = dataEng, REML = T);
anova(proficiencylmer0,proficiencylmer3);
#does proficiency specifically interact with priming?
proficiencylmer1b <- lmer(-1000/rt ~ relatedness * morphType * phonemicFluency + trialCount + freqTarget + lengthTarget + (1|subject) + (1|target), data = subset(dataEng, abs(scale(resid(proficiencylmer1)))<2.5), REML = T);
anova(proficiencylmer1b);
proficiencylmer2b <- lmer(-1000/rt ~ relatedness *  morphType * phonemicComprehension + freqTarget + lengthTarget + (1|subject) + (1|target), data = subset(dataEng, abs(scale(resid(proficiencylmer2)))<2.5), REML = T);
anova(proficiencylmer2b);
proficiencylmer3b <- lmer(-1000/rt ~ relatedness *  morphType * morphComprehension + freqTarget + lengthTarget + (1|subject) + (1|target), data = subset(dataEng, abs(scale(resid(proficiencylmer3)))<2.5), REML = T);
anova(proficiencylmer3b);
#what sort of effect this is? [Figure 3 in the paper]
temp <- data.frame(effect('relatedness:morphType:phonemicFluency', proficiencylmer1b, se=list(level=.95), xlevels=list(phonemicFluency=quantile(dataEng$phonemicFluency, probs=c(.05,.50,.95)))));
temp[,c('fit','lower','upper')] <- inv(temp[,c('fit','lower','upper')]);
revalue(temp$relatedness, c("rel"="Related"))-> temp$relatedness;
revalue(temp$relatedness, c("ctrl"="Unrelated"))-> temp$relatedness;
phonemicFluency_names <- c(
"10" = "Low Fluency",
"23" = "Medium Fluency",
"39" = "High Fluency");
ggplot(data = temp, aes(x=relatedness, y=fit, group=morphType)) +
geom_point(size = 2, position = dodge) +
geom_line(aes(linetype=morphType), position = dodge) +
scale_linetype_manual(values=c("dashed", "dotted", "solid")) +
theme_bw() +
theme(panel.grid.major = element_blank()) +
ylab('RTs (ms)') + xlab('') +
theme(axis.text.y = element_text(angle = 00, hjust = 1, size=8, colour = 'black'))+
theme(axis.text.x = element_text(size=13, colour = 'black'))+
geom_pointrange(aes(ymin = temp$lower, ymax = temp$upper), position = dodge) +
facet_grid(~ phonemicFluency,
labeller = labeller(phonemicFluency = as_labeller(phonemicFluency_names))) +
theme(strip.text = element_text(size=12)) +
theme(legend.position="none");
ggplot(data = temp, aes(x=relatedness, y=fit, group=morphType)) +
geom_point(size = 2, position = dodge) +
geom_line(aes(linetype=morphType), position = dodge) +
scale_linetype_manual(values=c("dashed", "dotted", "solid")) +
theme_bw() +
theme(panel.grid.major = element_blank()) +
ylab('RTs (ms)') + xlab('') +
theme(axis.text.y = element_text(angle = 00, hjust = 1, size=8, colour = 'black'))+
theme(axis.text.x = element_text(size=13, colour = 'black'))+
geom_pointrange(aes(ymin = temp$lower, ymax = temp$upper), position = dodge) +
facet_grid(~ phonemicFluency,
labeller = labeller(phonemicFluency = as_labeller(phonemicFluency_names))) +
theme(strip.text = element_text(size=12)) +
theme(legend.position="none");
dev.off()
ggplot(data = temp, aes(x=relatedness, y=fit, group=morphType)) +
geom_point(size = 2, position = dodge) +
geom_line(aes(linetype=morphType), position = dodge) +
scale_linetype_manual(values=c("dashed", "dotted", "solid")) +
theme_bw() +
theme(panel.grid.major = element_blank()) +
ylab('RTs (ms)') + xlab('') +
theme(axis.text.y = element_text(angle = 00, hjust = 1, size=8, colour = 'black'))+
theme(axis.text.x = element_text(size=13, colour = 'black'))+
geom_pointrange(aes(ymin = temp$lower, ymax = temp$upper), position = dodge) +
facet_grid(~ phonemicFluency,
labeller = labeller(phonemicFluency = as_labeller(phonemicFluency_names))) +
theme(strip.text = element_text(size=12)) +
theme(legend.position="none");
dev.off()
dev.off()
dev.off()
ggplot(data = temp, aes(x=relatedness, y=fit, group=morphType)) +
geom_point(size = 2, position = dodge) +
geom_line(aes(linetype=morphType), position = dodge) +
scale_linetype_manual(values=c("dashed", "dotted", "solid")) +
theme_bw() +
theme(panel.grid.major = element_blank()) +
ylab('RTs (ms)') + xlab('') +
theme(axis.text.y = element_text(angle = 00, hjust = 1, size=8, colour = 'black'))+
theme(axis.text.x = element_text(size=13, colour = 'black'))+
geom_pointrange(aes(ymin = temp$lower, ymax = temp$upper), position = dodge) +
facet_grid(~ phonemicFluency,
labeller = labeller(phonemicFluency = as_labeller(phonemicFluency_names))) +
theme(strip.text = element_text(size=12)) +
theme(legend.position="none");
ggsave("proficiencyModel.png", width = 7, height = 3, dpi = 300)
ggsave("proficiencyModel.jpg", width = 7, height = 3, dpi = 300)
ggsave("proficiencyModel.jpg", width = 5, height = 3, dpi = 300)
ggsave("proficiencyModel.jpg", width = 7, height = 3, dpi = 300)
temp <- data.frame(effect('relatedness:morphType:morphComprehension', proficiencylmer3b, se=list(level=.95), xlevels=list(morphComprehension=quantile(dataEng$morphComprehension, probs=c(.05,.50,.95)))));
temp[,c('fit','lower','upper')] <- inv(temp[,c('fit','lower','upper')]);
revalue(temp$relatedness, c("rel"="Related"))-> temp$relatedness;
revalue(temp$relatedness, c("ctrl"="Unrelated"))-> temp$relatedness;
morphComprehension_names <- c(
"6" = "Low Morph Awareness",
"9" = "Medium Morph Awareness",
"10" = "High Morph Awareness");
ggplot(data = temp, aes(x=relatedness, y=fit, group=morphType)) + theme_bw()+
geom_line(aes(linetype=morphType), position = dodge) +
scale_linetype_manual(values=c("dashed", "dotted", "solid")) +
geom_point(size = 2, position = dodge) +
geom_pointrange(aes(ymin = temp$lower, ymax = temp$upper), position = dodge) +
facet_grid( ~ morphComprehension, labeller = labeller(morphComprehension = as_labeller(morphComprehension_names))) +
theme(strip.text = element_text(size=12))+
theme(panel.grid.major = element_blank()) +
ylab('RTs (ms)') + xlab('') +
theme(axis.text.y = element_text(angle = 00, hjust = 1, size=8, colour = 'black'))+
theme(axis.text.x = element_text(size=13, colour = 'black')) +
theme(legend.position="none");
ggsave("morphAwarenessModel.jpg", width = 7, height = 3, dpi = 300);
temp <- unique(masterFile[masterFile$lexicality=='word' & masterFile$language=='eng',c('target','prime','morphType','relatedness','freqTarget','freqPrime','lengthTarget','lengthPrime','nTarget','nPrime','oscTarget')]);
summary(temp);
aggregate(oscTarget ~ morphType, FUN=fivenum, data=temp); #indeed they are
#modelling
osc1 <- lmer(-1000/rt ~ relatedness *  oscTarget * phonemicFluency + freqTarget + lengthTarget + (1|subject) + (1|target), data = dataEng, REML = T);
anova(osc1);
osc1b <- lmer(-1000/rt ~  relatedness * oscTarget * phonemicFluency + freqTarget + lengthTarget + (1|subject) + (1|target), data = subset(dataEng, abs(scale(resid(osc1)))<2), REML = T);
anova(osc1b);
summary(osc1b);
temp <- data.frame(effect('relatedness:oscTarget:phonemicFluency', osc1b, se=list(level=.95), xlevels=list(oscTarget=c(.20,.80), phonemicFluency=quantile(dataEng$phonemicFluency, probs=c(.05,.50,.95)))));
temp[,c('fit','lower','upper')] <- inv(temp[,c('fit','lower','upper')]);
revalue(temp$relatedness, c("rel"="Related"))-> temp$relatedness;
revalue(temp$relatedness, c("ctrl"="Unrelated"))-> temp$relatedness;
phonemicFluency_names <- c(
"10" = "Low Fluency",
"23" = "Medium Fluency",
"39" = "High Fluency"
);
temp$oscTarget <- as.factor(temp$oscTarget);
ggplot(data = temp, aes(x=relatedness, y=fit, group=oscTarget)) +
geom_point(position = dodge) +
geom_line(aes(linetype = oscTarget), position = dodge) +
scale_linetype_manual(values=c("dashed", "solid")) +
theme_bw() +
theme(panel.grid.major = element_blank()) +
ylab('RTs (ms)') + xlab('') +
theme(axis.text.y = element_text(angle = 00, hjust = 1, size=8, colour = 'black'))+
theme(axis.text.x = element_text(size=13, colour = 'black'))+
geom_pointrange(aes(ymin = temp$lower, ymax = temp$upper), position = dodge) +
facet_grid(~ phonemicFluency,
labeller = labeller(phonemicFluency = as_labeller(phonemicFluency_names))) +
theme(strip.text = element_text(size=12))+
theme(legend.position="none");
ggsave("oscModel.jpg", width = 7, height = 3, dpi = 300);
rbind(dataEng, dataIta) -> crossExp;
summary(crossExp);
crosslmer <- lmer(-1000/rt ~ relatedness * morphType * language + freqTarget + lengthTarget + (1|subject) + (1|target), data = crossExp, REML = T);
crosslmerb <- lmer(-1000/rt ~ relatedness * morphType * language + freqTarget + lengthTarget + (1|subject) + (1|target), data = subset(crossExp, abs(scale(resid(crosslmer)))<2.5), REML = T);
anova(crosslmerb);
pptFeatures <- unique(dataEng[,c('subject','age','gender','handedness','rotation','phonemicFluency', 'phonemicComprehension','morphComprehension','spelling','readingComprehension','vocabulary','oralComprehension','aoa1.Aoa', 'aoa2.usage', 'aoa3.context','aoa4.contextMultling','aoa5.selfRatedProf','aoa6.otherLang')]);
summary(pptFeatures);
jpeg(filename = paste(localGitDir,'/oscMorph.jpg', sep = ''), res=300, height=400, width=550);
ggboxplot(subset(temp, oscTarget>0), "morphType", "oscTarget",
color = "black", fill = grey(.80),
width = 0.5, ylab = 'OSC', xlab = '');
dev.off();
library(ggpubr);
jpeg(filename = paste(localGitDir,'/oscMorph.jpg', sep = ''), res=300, height=400, width=550);
ggboxplot(subset(temp, oscTarget>0), "morphType", "oscTarget",
color = "black", fill = grey(.80),
width = 0.5, ylab = 'OSC', xlab = '');
dev.off();
ggboxplot(subset(temp, oscTarget>0), "morphType", "oscTarget",
color = "black", fill = grey(.80),
width = 0.5, ylab = 'OSC', xlab = '');
temp <- unique(masterFile[masterFile$lexicality=='word' & masterFile$language=='eng',c('target','prime','morphType','relatedness','freqTarget','freqPrime','lengthTarget','lengthPrime','nTarget','nPrime','oscTarget')]);
summary(temp);
aggregate(oscTarget ~ morphType, FUN=fivenum, data=temp); #indeed they are
revalue(temp$morphType, c("or"="Orthographic", 'op'='Opaque', 'tr'='Transparent'))-> temp$morphType;
library(ggpubr);
jpeg(filename = paste(localGitDir,'/oscMorph.jpg', sep = ''), res=300, height=400, width=550);
ggboxplot(subset(temp, oscTarget>0), "morphType", "oscTarget",
color = "black", fill = grey(.80),
width = 0.5, ylab = 'OSC', xlab = '');
dev.off();
revalue(temp$morphType, c("or"="Orthographic", 'op'='Opaque', 'tr'='Transparent'))-> temp$morphType;
library(ggpubr);
ggboxplot(subset(temp, oscTarget>0), "morphType", "oscTarget",
color = "black", fill = grey(.80),
width = 0.5, ylab = 'OSC', xlab = '');
ggsave("oscMorph.jpg", width = 4, height = 3, dpi = 300);
